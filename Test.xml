<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="6" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2021-10-01" time="20:49:51">
  <environment os-version="10.0.19043" machine-name="OLIGO-XPS" platform="Microsoft Windows 10 Pro|C:\Windows|\Device\Harddisk0\Partition3" clr-version="Unknown" user="yadian" user-domain="OLIGO-XPS" cwd="C:\Users\yadian\Projects\testing-with-pester" nunit-version="2.5.8.0" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="0.0572" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\Users\yadian\Projects\testing-with-pester\Get-Planet.Tests.ps1" executed="True" result="Success" success="True" time="0.0572" asserts="0" description="C:\Users\yadian\Projects\testing-with-pester\Get-Planet.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-Planet" executed="True" result="Success" success="True" time="0.024" asserts="0" description="Get-Planet">
            <results>
              <test-suite type="TestFixture" name="Get-Planet.Filtering by Name" executed="True" result="Success" success="True" time="0.0219" asserts="0" description="Get-Planet.Filtering by Name">
                <results>
                  <test-case description="Given invalid parameter -Name 'Alpha Centauri', it returns $null" name="Get-Planet.Filtering by Name.Given invalid parameter -Name 'Alpha Centauri', it returns $null" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-suite type="ParameterizedTest" name="Get-Planet.Filtering by Name.Given valid -Name '&lt;Filter&gt;', it returns '&lt;Expected&gt;'" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Given valid -Name '&lt;Filter&gt;', it returns '&lt;Expected&gt;'">
                    <results>
                      <test-case description="Given valid -Name 'Earth', it returns 'Earth'" name="Get-Planet.Filtering by Name.Given valid -Name 'Earth', it returns 'Earth'" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Given valid -Name 'ne*', it returns 'Neptune'" name="Get-Planet.Filtering by Name.Given valid -Name 'ne*', it returns 'Neptune'" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Given valid -Name 'ur*', it returns 'Uranus'" name="Get-Planet.Filtering by Name.Given valid -Name 'ur*', it returns 'Uranus'" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Given valid -Name 'm*', it returns 'Mercury Mars'" name="Get-Planet.Filtering by Name.Given valid -Name 'm*', it returns 'Mercury Mars'" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-case description="Given no parameters, it lists all 8 planets" name="Get-Planet.Given no parameters, it lists all 8 planets" time="0.002" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>